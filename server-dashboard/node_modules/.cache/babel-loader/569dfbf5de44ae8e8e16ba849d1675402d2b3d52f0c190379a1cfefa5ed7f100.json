{"ast":null,"code":"var _jsxFileName = \"F:\\\\Co-Labs\\\\ddservers\\\\server-dashboard\\\\src\\\\ServerDashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getBackendServiceUrl } from \"../config/servers\";\nimport { Typography, Divider, Grid, CircularProgress, Button, Paper } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard({\n  server,\n  onClose\n}) {\n  _s();\n  const [metrics, setMetrics] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    if (!server) return;\n    async function fetchMetrics() {\n      setLoading(true);\n      setError(\"\");\n      try {\n        const backendUrl = await getBackendServiceUrl();\n        const res = await fetch(`${backendUrl}/api/metrics/aggregate?serverAddresses=${encodeURIComponent(server.name)}`);\n        const data = await res.json();\n        setMetrics(data[0]);\n      } catch {\n        setError(\"Failed to fetch metrics\");\n      }\n      setLoading(false);\n    }\n    fetchMetrics();\n  }, [server]);\n  if (!server) return null;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      margin: '40px auto',\n      padding: 4,\n      borderRadius: 2,\n      maxWidth: 600,\n      position: 'relative',\n      top: '10vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: [\"Dashboard for \", server.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      sx: {\n        position: 'absolute',\n        top: 16,\n        right: 16\n      },\n      onClick: onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        my: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n      size: 24,\n      sx: {\n        mt: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), metrics && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"Server Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [\"Total CPU: \", metrics.TotalCpu]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [\"Used CPU: \", metrics.UsedCpu]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [\"Total RAM: \", metrics.TotalRam, \" MB\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [\"Used RAM: \", metrics.UsedRam, \" MB\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [\"Total Disk: \", metrics.TotalDisk, \" GB\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [\"Used Disk: \", metrics.UsedDisk, \" GB\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [\"Timestamp: \", metrics.Timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"Service Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: \"Service management options coming soon...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"BNHcLZ97dpXpfdZ6cTLJi92d4fk=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","getBackendServiceUrl","Typography","Divider","Grid","CircularProgress","Button","Paper","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","server","onClose","_s","metrics","setMetrics","loading","setLoading","error","setError","fetchMetrics","backendUrl","res","fetch","encodeURIComponent","name","data","json","sx","margin","padding","borderRadius","maxWidth","position","top","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","right","onClick","my","size","mt","color","container","spacing","item","xs","TotalCpu","UsedCpu","TotalRam","UsedRam","TotalDisk","UsedDisk","Timestamp","_c","$RefreshReg$"],"sources":["F:/Co-Labs/ddservers/server-dashboard/src/ServerDashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getBackendServiceUrl } from \"../config/servers\";\r\nimport {\r\n  Typography,\r\n  Divider,\r\n  Grid,\r\n  CircularProgress,\r\n  Button,\r\n  Paper\r\n} from \"@mui/material\";\r\n\r\nexport default function Dashboard({ server, onClose }) {\r\n  const [metrics, setMetrics] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!server) return;\r\n    async function fetchMetrics() {\r\n      setLoading(true);\r\n      setError(\"\");\r\n      try {\r\n        const backendUrl = await getBackendServiceUrl();\r\n        const res = await fetch(`${backendUrl}/api/metrics/aggregate?serverAddresses=${encodeURIComponent(server.name)}`);\r\n        const data = await res.json();\r\n        setMetrics(data[0]);\r\n      } catch {\r\n        setError(\"Failed to fetch metrics\");\r\n      }\r\n      setLoading(false);\r\n    }\r\n    fetchMetrics();\r\n  }, [server]);\r\n\r\n  if (!server) return null;\r\n\r\n  return (\r\n    <Paper sx={{ margin: '40px auto', padding: 4, borderRadius: 2, maxWidth: 600, position: 'relative', top: '10vh' }}>\r\n      <Typography variant=\"h5\" gutterBottom>Dashboard for {server.name}</Typography>\r\n      <Button variant=\"outlined\" sx={{ position: 'absolute', top: 16, right: 16 }} onClick={onClose}>Close</Button>\r\n      <Divider sx={{ my: 2 }} />\r\n      {loading && <CircularProgress size={24} sx={{ mt: 1 }} />}\r\n      {error && <Typography color=\"error\">{error}</Typography>}\r\n      {metrics && (\r\n        <>\r\n          <Typography variant=\"subtitle1\">Server Metrics</Typography>\r\n          <Grid container spacing={2} sx={{ mt: 1 }}>\r\n            <Grid item xs={6}>Total CPU: {metrics.TotalCpu}</Grid>\r\n            <Grid item xs={6}>Used CPU: {metrics.UsedCpu}</Grid>\r\n            <Grid item xs={6}>Total RAM: {metrics.TotalRam} MB</Grid>\r\n            <Grid item xs={6}>Used RAM: {metrics.UsedRam} MB</Grid>\r\n            <Grid item xs={6}>Total Disk: {metrics.TotalDisk} GB</Grid>\r\n            <Grid item xs={6}>Used Disk: {metrics.UsedDisk} GB</Grid>\r\n            <Grid item xs={12}>Timestamp: {metrics.Timestamp}</Grid>\r\n          </Grid>\r\n          <Divider sx={{ my: 2 }} />\r\n          <Typography variant=\"subtitle1\">Service Manager</Typography>\r\n          <Typography color=\"text.secondary\">Service management options coming soon...</Typography>\r\n        </>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}